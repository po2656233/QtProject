// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameBaseInfo_login_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskItem_login_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo_login_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GameItem_login_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GameList_login_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoomInfo_login_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_login_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TaskList_login_2eproto;
namespace go {
class RegisterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Register> _instance;
} _Register_default_instance_;
class RegisterResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResult> _instance;
} _RegisterResult_default_instance_;
class LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Login> _instance;
} _Login_default_instance_;
class ResResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResResult> _instance;
} _ResResult_default_instance_;
class TaskItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskItem> _instance;
} _TaskItem_default_instance_;
class TaskListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskList> _instance;
} _TaskList_default_instance_;
class GameListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameList> _instance;
} _GameList_default_instance_;
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> _instance;
} _UserInfo_default_instance_;
class RoomInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfo> _instance;
} _RoomInfo_default_instance_;
class GameBaseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameBaseInfo> _instance;
} _GameBaseInfo_default_instance_;
class GameItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameItem> _instance;
} _GameItem_default_instance_;
class MasterInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterInfo> _instance;
} _MasterInfo_default_instance_;
class ReqEnterRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqEnterRoom> _instance;
} _ReqEnterRoom_default_instance_;
class ReqEnterGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqEnterGame> _instance;
} _ReqEnterGame_default_instance_;
class ReqExitGameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqExitGame> _instance;
} _ReqExitGame_default_instance_;
}  // namespace go
static void InitDefaultsRegister_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_Register_default_instance_;
    new (ptr) ::go::Register();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::Register::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Register_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegister_login_2eproto}, {}};

static void InitDefaultsRegisterResult_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_RegisterResult_default_instance_;
    new (ptr) ::go::RegisterResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::RegisterResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterResult_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterResult_login_2eproto}, {}};

static void InitDefaultsLogin_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_Login_default_instance_;
    new (ptr) ::go::Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::Login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Login_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogin_login_2eproto}, {}};

static void InitDefaultsResResult_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_ResResult_default_instance_;
    new (ptr) ::go::ResResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::ResResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResResult_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResResult_login_2eproto}, {}};

static void InitDefaultsTaskItem_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_TaskItem_default_instance_;
    new (ptr) ::go::TaskItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::TaskItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskItem_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskItem_login_2eproto}, {}};

static void InitDefaultsTaskList_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_TaskList_default_instance_;
    new (ptr) ::go::TaskList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::TaskList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TaskList_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTaskList_login_2eproto}, {
      &scc_info_TaskItem_login_2eproto.base,}};

static void InitDefaultsGameList_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_GameList_default_instance_;
    new (ptr) ::go::GameList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::GameList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameList_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameList_login_2eproto}, {
      &scc_info_GameItem_login_2eproto.base,}};

static void InitDefaultsUserInfo_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_UserInfo_default_instance_;
    new (ptr) ::go::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::UserInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserInfo_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserInfo_login_2eproto}, {}};

static void InitDefaultsRoomInfo_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_RoomInfo_default_instance_;
    new (ptr) ::go::RoomInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::RoomInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoomInfo_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomInfo_login_2eproto}, {
      &scc_info_GameList_login_2eproto.base,}};

static void InitDefaultsGameBaseInfo_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_GameBaseInfo_default_instance_;
    new (ptr) ::go::GameBaseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::GameBaseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameBaseInfo_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameBaseInfo_login_2eproto}, {}};

static void InitDefaultsGameItem_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_GameItem_default_instance_;
    new (ptr) ::go::GameItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::GameItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GameItem_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGameItem_login_2eproto}, {
      &scc_info_GameBaseInfo_login_2eproto.base,}};

static void InitDefaultsMasterInfo_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_MasterInfo_default_instance_;
    new (ptr) ::go::MasterInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::MasterInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MasterInfo_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMasterInfo_login_2eproto}, {
      &scc_info_UserInfo_login_2eproto.base,
      &scc_info_RoomInfo_login_2eproto.base,
      &scc_info_TaskList_login_2eproto.base,}};

static void InitDefaultsReqEnterRoom_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_ReqEnterRoom_default_instance_;
    new (ptr) ::go::ReqEnterRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::ReqEnterRoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqEnterRoom_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqEnterRoom_login_2eproto}, {}};

static void InitDefaultsReqEnterGame_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_ReqEnterGame_default_instance_;
    new (ptr) ::go::ReqEnterGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::ReqEnterGame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqEnterGame_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqEnterGame_login_2eproto}, {}};

static void InitDefaultsReqExitGame_login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::go::_ReqExitGame_default_instance_;
    new (ptr) ::go::ReqExitGame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::go::ReqExitGame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqExitGame_login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqExitGame_login_2eproto}, {}};

void InitDefaults_login_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Register_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterResult_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Login_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResResult_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskItem_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskList_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameList_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserInfo_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomInfo_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameBaseInfo_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameItem_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterInfo_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqEnterRoom_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqEnterGame_login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqExitGame_login_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_login_2eproto[15];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_login_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_login_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_login_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::Register, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::Register, name_),
  PROTOBUF_FIELD_OFFSET(::go::Register, password_),
  PROTOBUF_FIELD_OFFSET(::go::Register, securitycode_),
  PROTOBUF_FIELD_OFFSET(::go::Register, machinecode_),
  PROTOBUF_FIELD_OFFSET(::go::Register, invitationcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::RegisterResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::RegisterResult, state_),
  PROTOBUF_FIELD_OFFSET(::go::RegisterResult, hints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::Login, account_),
  PROTOBUF_FIELD_OFFSET(::go::Login, password_),
  PROTOBUF_FIELD_OFFSET(::go::Login, securitycode_),
  PROTOBUF_FIELD_OFFSET(::go::Login, machinecode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::ResResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::ResResult, state_),
  PROTOBUF_FIELD_OFFSET(::go::ResResult, hints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::TaskItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::TaskItem, taskid_),
  PROTOBUF_FIELD_OFFSET(::go::TaskItem, twice_),
  PROTOBUF_FIELD_OFFSET(::go::TaskItem, hints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::TaskList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::TaskList, task_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::GameList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::GameList, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, name_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, accounts_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, password_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, faceid_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, gender_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, age_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, level_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, money_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, passportid_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, compellation_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, agentid_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, spreadergameid_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, clientaddr_),
  PROTOBUF_FIELD_OFFSET(::go::UserInfo, machinecode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::RoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::RoomInfo, roomnum_),
  PROTOBUF_FIELD_OFFSET(::go::RoomInfo, roomkey_),
  PROTOBUF_FIELD_OFFSET(::go::RoomInfo, roomname_),
  PROTOBUF_FIELD_OFFSET(::go::RoomInfo, games_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, type_),
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, kindid_),
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, level_),
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, name_),
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, enterscore_),
  PROTOBUF_FIELD_OFFSET(::go::GameBaseInfo, lessscore_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::GameItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::GameItem, id_),
  PROTOBUF_FIELD_OFFSET(::go::GameItem, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::MasterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::MasterInfo, userinfo_),
  PROTOBUF_FIELD_OFFSET(::go::MasterInfo, roomsinfo_),
  PROTOBUF_FIELD_OFFSET(::go::MasterInfo, tasks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::ReqEnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::ReqEnterRoom, roomnum_),
  PROTOBUF_FIELD_OFFSET(::go::ReqEnterRoom, roomkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::ReqEnterGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::ReqEnterGame, gameid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::go::ReqExitGame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::go::ReqExitGame, gameid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::go::Register)},
  { 10, -1, sizeof(::go::RegisterResult)},
  { 17, -1, sizeof(::go::Login)},
  { 26, -1, sizeof(::go::ResResult)},
  { 33, -1, sizeof(::go::TaskItem)},
  { 41, -1, sizeof(::go::TaskList)},
  { 47, -1, sizeof(::go::GameList)},
  { 53, -1, sizeof(::go::UserInfo)},
  { 72, -1, sizeof(::go::RoomInfo)},
  { 81, -1, sizeof(::go::GameBaseInfo)},
  { 92, -1, sizeof(::go::GameItem)},
  { 99, -1, sizeof(::go::MasterInfo)},
  { 107, -1, sizeof(::go::ReqEnterRoom)},
  { 114, -1, sizeof(::go::ReqEnterGame)},
  { 120, -1, sizeof(::go::ReqExitGame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_Register_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_RegisterResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_ResResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_TaskItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_TaskList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_GameList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_RoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_GameBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_GameItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_MasterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_ReqEnterRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_ReqEnterGame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::go::_ReqExitGame_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_login_2eproto = {
  {}, AddDescriptors_login_2eproto, "login.proto", schemas,
  file_default_instances, TableStruct_login_2eproto::offsets,
  file_level_metadata_login_2eproto, 15, file_level_enum_descriptors_login_2eproto, file_level_service_descriptors_login_2eproto,
};

const char descriptor_table_protodef_login_2eproto[] =
  "\n\013login.proto\022\002go\"m\n\010Register\022\014\n\004Name\030\001 "
  "\001(\t\022\020\n\010Password\030\002 \001(\t\022\024\n\014SecurityCode\030\003 "
  "\001(\t\022\023\n\013MachineCode\030\004 \001(\t\022\026\n\016InvitationCo"
  "de\030\005 \001(\t\".\n\016RegisterResult\022\r\n\005State\030\001 \001("
  "\r\022\r\n\005Hints\030\002 \001(\t\"U\n\005Login\022\017\n\007Account\030\001 \001"
  "(\t\022\020\n\010Password\030\002 \001(\t\022\024\n\014SecurityCode\030\003 \001"
  "(\t\022\023\n\013MachineCode\030\004 \001(\t\")\n\tResResult\022\r\n\005"
  "State\030\001 \001(\r\022\r\n\005Hints\030\002 \001(\t\"8\n\010TaskItem\022\016"
  "\n\006TaskID\030\001 \001(\r\022\r\n\005Twice\030\002 \001(\r\022\r\n\005Hints\030\003"
  " \001(\t\"&\n\010TaskList\022\032\n\004Task\030\001 \003(\0132\014.go.Task"
  "Item\"\'\n\010GameList\022\033\n\005Items\030\001 \003(\0132\014.go.Gam"
  "eItem\"\203\002\n\010UserInfo\022\014\n\004Name\030\001 \001(\t\022\020\n\010Acco"
  "unts\030\002 \001(\t\022\020\n\010Password\030\003 \001(\t\022\016\n\006FaceID\030\004"
  " \001(\r\022\016\n\006Gender\030\005 \001(\r\022\013\n\003Age\030\006 \001(\r\022\r\n\005Lev"
  "el\030\007 \001(\r\022\r\n\005Money\030\010 \001(\003\022\022\n\nPassPortID\030\t "
  "\001(\t\022\024\n\014Compellation\030\n \001(\t\022\017\n\007AgentID\030\013 \001"
  "(\r\022\026\n\016SpreaderGameID\030\014 \001(\r\022\022\n\nClientAddr"
  "\030\r \001(\r\022\023\n\013MachineCode\030\016 \001(\t\"[\n\010RoomInfo\022"
  "\017\n\007RoomNum\030\001 \001(\r\022\017\n\007RoomKey\030\002 \001(\t\022\020\n\010Roo"
  "mName\030\003 \001(\t\022\033\n\005Games\030\004 \001(\0132\014.go.GameList"
  "\"p\n\014GameBaseInfo\022\014\n\004Type\030\001 \001(\r\022\016\n\006KindID"
  "\030\002 \001(\r\022\r\n\005Level\030\003 \001(\r\022\014\n\004Name\030\004 \001(\t\022\022\n\nE"
  "nterScore\030\005 \001(\r\022\021\n\tLessScore\030\006 \001(\r\"6\n\010Ga"
  "meItem\022\n\n\002ID\030\001 \001(\r\022\036\n\004Info\030\002 \001(\0132\020.go.Ga"
  "meBaseInfo\"j\n\nMasterInfo\022\036\n\010UserInfo\030\001 \001"
  "(\0132\014.go.UserInfo\022\037\n\tRoomsInfo\030\002 \003(\0132\014.go"
  ".RoomInfo\022\033\n\005Tasks\030\003 \001(\0132\014.go.TaskList\"0"
  "\n\014ReqEnterRoom\022\017\n\007RoomNum\030\001 \001(\r\022\017\n\007RoomK"
  "ey\030\002 \001(\t\"\036\n\014ReqEnterGame\022\016\n\006GameID\030\001 \001(\r"
  "\"\035\n\013ReqExitGame\022\016\n\006GameID\030\001 \001(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_login_2eproto = {
  false, InitDefaults_login_2eproto, 
  descriptor_table_protodef_login_2eproto,
  "login.proto", &assign_descriptors_table_login_2eproto, 1199,
};

void AddDescriptors_login_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_login_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_login_2eproto = []() { AddDescriptors_login_2eproto(); return true; }();
namespace go {

// ===================================================================

void Register::InitAsDefaultInstance() {
}
class Register::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Register::kNameFieldNumber;
const int Register::kPasswordFieldNumber;
const int Register::kSecurityCodeFieldNumber;
const int Register::kMachineCodeFieldNumber;
const int Register::kInvitationCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Register::Register()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.Register)
}
Register::Register(const Register& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  securitycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.securitycode().size() > 0) {
    securitycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.securitycode_);
  }
  machinecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machinecode().size() > 0) {
    machinecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machinecode_);
  }
  invitationcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.invitationcode().size() > 0) {
    invitationcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitationcode_);
  }
  // @@protoc_insertion_point(copy_constructor:go.Register)
}

void Register::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Register_login_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitationcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Register::~Register() {
  // @@protoc_insertion_point(destructor:go.Register)
  SharedDtor();
}

void Register::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitationcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Register::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Register& Register::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Register_login_2eproto.base);
  return *internal_default_instance();
}


void Register::Clear() {
// @@protoc_insertion_point(message_clear_start:go.Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  invitationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Register::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Register*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Register.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Register.Password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string SecurityCode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Register.SecurityCode");
        object = msg->mutable_securitycode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string MachineCode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Register.MachineCode");
        object = msg->mutable_machinecode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string InvitationCode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Register.InvitationCode");
        object = msg->mutable_invitationcode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Register::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.Register)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Register.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Register.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SecurityCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->securitycode().data(), static_cast<int>(this->securitycode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Register.SecurityCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MachineCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machinecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machinecode().data(), static_cast<int>(this->machinecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Register.MachineCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string InvitationCode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_invitationcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->invitationcode().data(), static_cast<int>(this->invitationcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Register.InvitationCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.Register)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.Register)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Register::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string SecurityCode = 3;
  if (this->securitycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitycode().data(), static_cast<int>(this->securitycode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.SecurityCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->securitycode(), output);
  }

  // string MachineCode = 4;
  if (this->machinecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machinecode().data(), static_cast<int>(this->machinecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.MachineCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->machinecode(), output);
  }

  // string InvitationCode = 5;
  if (this->invitationcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitationcode().data(), static_cast<int>(this->invitationcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.InvitationCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->invitationcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.Register)
}

::google::protobuf::uint8* Register::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.Register)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string SecurityCode = 3;
  if (this->securitycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitycode().data(), static_cast<int>(this->securitycode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.SecurityCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->securitycode(), target);
  }

  // string MachineCode = 4;
  if (this->machinecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machinecode().data(), static_cast<int>(this->machinecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.MachineCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->machinecode(), target);
  }

  // string InvitationCode = 5;
  if (this->invitationcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->invitationcode().data(), static_cast<int>(this->invitationcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Register.InvitationCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->invitationcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.Register)
  return target;
}

size_t Register::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.Register)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string SecurityCode = 3;
  if (this->securitycode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->securitycode());
  }

  // string MachineCode = 4;
  if (this->machinecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machinecode());
  }

  // string InvitationCode = 5;
  if (this->invitationcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->invitationcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Register::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.Register)
  GOOGLE_DCHECK_NE(&from, this);
  const Register* source =
      ::google::protobuf::DynamicCastToGenerated<Register>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.Register)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.Register)
    MergeFrom(*source);
  }
}

void Register::MergeFrom(const Register& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.Register)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.securitycode().size() > 0) {

    securitycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.securitycode_);
  }
  if (from.machinecode().size() > 0) {

    machinecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machinecode_);
  }
  if (from.invitationcode().size() > 0) {

    invitationcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.invitationcode_);
  }
}

void Register::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Register::CopyFrom(const Register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Register::IsInitialized() const {
  return true;
}

void Register::Swap(Register* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Register::InternalSwap(Register* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  securitycode_.Swap(&other->securitycode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machinecode_.Swap(&other->machinecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  invitationcode_.Swap(&other->invitationcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Register::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RegisterResult::InitAsDefaultInstance() {
}
class RegisterResult::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResult::kStateFieldNumber;
const int RegisterResult::kHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResult::RegisterResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.RegisterResult)
}
RegisterResult::RegisterResult(const RegisterResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hints().size() > 0) {
    hints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hints_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:go.RegisterResult)
}

void RegisterResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RegisterResult_login_2eproto.base);
  hints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0u;
}

RegisterResult::~RegisterResult() {
  // @@protoc_insertion_point(destructor:go.RegisterResult)
  SharedDtor();
}

void RegisterResult::SharedDtor() {
  hints_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterResult& RegisterResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RegisterResult_login_2eproto.base);
  return *internal_default_instance();
}


void RegisterResult::Clear() {
// @@protoc_insertion_point(message_clear_start:go.RegisterResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hints_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RegisterResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RegisterResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Hints = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.RegisterResult.Hints");
        object = msg->mutable_hints();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RegisterResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.RegisterResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Hints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hints()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hints().data(), static_cast<int>(this->hints().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.RegisterResult.Hints"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.RegisterResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.RegisterResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RegisterResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.RegisterResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 State = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->state(), output);
  }

  // string Hints = 2;
  if (this->hints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hints().data(), static_cast<int>(this->hints().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.RegisterResult.Hints");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hints(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.RegisterResult)
}

::google::protobuf::uint8* RegisterResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.RegisterResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 State = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->state(), target);
  }

  // string Hints = 2;
  if (this->hints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hints().data(), static_cast<int>(this->hints().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.RegisterResult.Hints");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hints(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.RegisterResult)
  return target;
}

size_t RegisterResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.RegisterResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Hints = 2;
  if (this->hints().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hints());
  }

  // uint32 State = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.RegisterResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResult* source =
      ::google::protobuf::DynamicCastToGenerated<RegisterResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.RegisterResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.RegisterResult)
    MergeFrom(*source);
  }
}

void RegisterResult::MergeFrom(const RegisterResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.RegisterResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hints().size() > 0) {

    hints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hints_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void RegisterResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.RegisterResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResult::CopyFrom(const RegisterResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.RegisterResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResult::IsInitialized() const {
  return true;
}

void RegisterResult::Swap(RegisterResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResult::InternalSwap(RegisterResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  hints_.Swap(&other->hints_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
}

::google::protobuf::Metadata RegisterResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Login::InitAsDefaultInstance() {
}
class Login::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kAccountFieldNumber;
const int Login::kPasswordFieldNumber;
const int Login::kSecurityCodeFieldNumber;
const int Login::kMachineCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.Login)
}
Login::Login(const Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  securitycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.securitycode().size() > 0) {
    securitycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.securitycode_);
  }
  machinecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machinecode().size() > 0) {
    machinecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machinecode_);
  }
  // @@protoc_insertion_point(copy_constructor:go.Login)
}

void Login::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Login_login_2eproto.base);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitycode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:go.Login)
  SharedDtor();
}

void Login::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitycode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Login& Login::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Login_login_2eproto.base);
  return *internal_default_instance();
}


void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:go.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  securitycode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Login::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Login*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Login.Account");
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Login.Password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string SecurityCode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Login.SecurityCode");
        object = msg->mutable_securitycode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string MachineCode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.Login.MachineCode");
        object = msg->mutable_machinecode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.Login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Login.Account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Login.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SecurityCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_securitycode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->securitycode().data(), static_cast<int>(this->securitycode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Login.SecurityCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MachineCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machinecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machinecode().data(), static_cast<int>(this->machinecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.Login.MachineCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.Login)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.Account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string SecurityCode = 3;
  if (this->securitycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitycode().data(), static_cast<int>(this->securitycode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.SecurityCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->securitycode(), output);
  }

  // string MachineCode = 4;
  if (this->machinecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machinecode().data(), static_cast<int>(this->machinecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.MachineCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->machinecode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.Login)
}

::google::protobuf::uint8* Login::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.Account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string SecurityCode = 3;
  if (this->securitycode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitycode().data(), static_cast<int>(this->securitycode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.SecurityCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->securitycode(), target);
  }

  // string MachineCode = 4;
  if (this->machinecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machinecode().data(), static_cast<int>(this->machinecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.Login.MachineCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->machinecode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.Login)
  return target;
}

size_t Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string SecurityCode = 3;
  if (this->securitycode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->securitycode());
  }

  // string MachineCode = 4;
  if (this->machinecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machinecode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Login* source =
      ::google::protobuf::DynamicCastToGenerated<Login>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.Login)
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.securitycode().size() > 0) {

    securitycode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.securitycode_);
  }
  if (from.machinecode().size() > 0) {

    machinecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machinecode_);
  }
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {
  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  securitycode_.Swap(&other->securitycode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machinecode_.Swap(&other->machinecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Login::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResResult::InitAsDefaultInstance() {
}
class ResResult::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResResult::kStateFieldNumber;
const int ResResult::kHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResResult::ResResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.ResResult)
}
ResResult::ResResult(const ResResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hints().size() > 0) {
    hints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hints_);
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:go.ResResult)
}

void ResResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResResult_login_2eproto.base);
  hints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0u;
}

ResResult::~ResResult() {
  // @@protoc_insertion_point(destructor:go.ResResult)
  SharedDtor();
}

void ResResult::SharedDtor() {
  hints_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResResult& ResResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResResult_login_2eproto.base);
  return *internal_default_instance();
}


void ResResult::Clear() {
// @@protoc_insertion_point(message_clear_start:go.ResResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hints_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 State = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Hints = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.ResResult.Hints");
        object = msg->mutable_hints();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.ResResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 State = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Hints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hints()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hints().data(), static_cast<int>(this->hints().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.ResResult.Hints"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.ResResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.ResResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.ResResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 State = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->state(), output);
  }

  // string Hints = 2;
  if (this->hints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hints().data(), static_cast<int>(this->hints().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.ResResult.Hints");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hints(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.ResResult)
}

::google::protobuf::uint8* ResResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.ResResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 State = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->state(), target);
  }

  // string Hints = 2;
  if (this->hints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hints().data(), static_cast<int>(this->hints().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.ResResult.Hints");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hints(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.ResResult)
  return target;
}

size_t ResResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.ResResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Hints = 2;
  if (this->hints().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hints());
  }

  // uint32 State = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.ResResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ResResult* source =
      ::google::protobuf::DynamicCastToGenerated<ResResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.ResResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.ResResult)
    MergeFrom(*source);
  }
}

void ResResult::MergeFrom(const ResResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.ResResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hints().size() > 0) {

    hints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hints_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ResResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.ResResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResResult::CopyFrom(const ResResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.ResResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResResult::IsInitialized() const {
  return true;
}

void ResResult::Swap(ResResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResResult::InternalSwap(ResResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  hints_.Swap(&other->hints_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
}

::google::protobuf::Metadata ResResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskItem::InitAsDefaultInstance() {
}
class TaskItem::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskItem::kTaskIDFieldNumber;
const int TaskItem::kTwiceFieldNumber;
const int TaskItem::kHintsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskItem::TaskItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.TaskItem)
}
TaskItem::TaskItem(const TaskItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hints().size() > 0) {
    hints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hints_);
  }
  ::memcpy(&taskid_, &from.taskid_,
    static_cast<size_t>(reinterpret_cast<char*>(&twice_) -
    reinterpret_cast<char*>(&taskid_)) + sizeof(twice_));
  // @@protoc_insertion_point(copy_constructor:go.TaskItem)
}

void TaskItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskItem_login_2eproto.base);
  hints_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&taskid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twice_) -
      reinterpret_cast<char*>(&taskid_)) + sizeof(twice_));
}

TaskItem::~TaskItem() {
  // @@protoc_insertion_point(destructor:go.TaskItem)
  SharedDtor();
}

void TaskItem::SharedDtor() {
  hints_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskItem& TaskItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskItem_login_2eproto.base);
  return *internal_default_instance();
}


void TaskItem::Clear() {
// @@protoc_insertion_point(message_clear_start:go.TaskItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hints_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&taskid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twice_) -
      reinterpret_cast<char*>(&taskid_)) + sizeof(twice_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 TaskID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_taskid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 Twice = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_twice(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Hints = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.TaskItem.Hints");
        object = msg->mutable_hints();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.TaskItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TaskID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Twice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &twice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Hints = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hints()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hints().data(), static_cast<int>(this->hints().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.TaskItem.Hints"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.TaskItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.TaskItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.TaskItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TaskID = 1;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // uint32 Twice = 2;
  if (this->twice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->twice(), output);
  }

  // string Hints = 3;
  if (this->hints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hints().data(), static_cast<int>(this->hints().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.TaskItem.Hints");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hints(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.TaskItem)
}

::google::protobuf::uint8* TaskItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.TaskItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TaskID = 1;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // uint32 Twice = 2;
  if (this->twice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->twice(), target);
  }

  // string Hints = 3;
  if (this->hints().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hints().data(), static_cast<int>(this->hints().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.TaskItem.Hints");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hints(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.TaskItem)
  return target;
}

size_t TaskItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.TaskItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Hints = 3;
  if (this->hints().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hints());
  }

  // uint32 TaskID = 1;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->taskid());
  }

  // uint32 Twice = 2;
  if (this->twice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->twice());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.TaskItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskItem* source =
      ::google::protobuf::DynamicCastToGenerated<TaskItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.TaskItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.TaskItem)
    MergeFrom(*source);
  }
}

void TaskItem::MergeFrom(const TaskItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.TaskItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hints().size() > 0) {

    hints_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hints_);
  }
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
  if (from.twice() != 0) {
    set_twice(from.twice());
  }
}

void TaskItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.TaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskItem::CopyFrom(const TaskItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.TaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskItem::IsInitialized() const {
  return true;
}

void TaskItem::Swap(TaskItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskItem::InternalSwap(TaskItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  hints_.Swap(&other->hints_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(taskid_, other->taskid_);
  swap(twice_, other->twice_);
}

::google::protobuf::Metadata TaskItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskList::InitAsDefaultInstance() {
}
class TaskList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskList::kTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskList::TaskList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.TaskList)
}
TaskList::TaskList(const TaskList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      task_(from.task_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:go.TaskList)
}

void TaskList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskList_login_2eproto.base);
}

TaskList::~TaskList() {
  // @@protoc_insertion_point(destructor:go.TaskList)
  SharedDtor();
}

void TaskList::SharedDtor() {
}

void TaskList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskList& TaskList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskList_login_2eproto.base);
  return *internal_default_instance();
}


void TaskList::Clear() {
// @@protoc_insertion_point(message_clear_start:go.TaskList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .go.TaskItem Task = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::go::TaskItem::_InternalParse;
          object = msg->add_task();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.TaskList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .go.TaskItem Task = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_task()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.TaskList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.TaskList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.TaskList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .go.TaskItem Task = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->task(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.TaskList)
}

::google::protobuf::uint8* TaskList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.TaskList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .go.TaskItem Task = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->task_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->task(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.TaskList)
  return target;
}

size_t TaskList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.TaskList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .go.TaskItem Task = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->task_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->task(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.TaskList)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskList* source =
      ::google::protobuf::DynamicCastToGenerated<TaskList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.TaskList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.TaskList)
    MergeFrom(*source);
  }
}

void TaskList::MergeFrom(const TaskList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.TaskList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  task_.MergeFrom(from.task_);
}

void TaskList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.TaskList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskList::CopyFrom(const TaskList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.TaskList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskList::IsInitialized() const {
  return true;
}

void TaskList::Swap(TaskList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskList::InternalSwap(TaskList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&task_)->InternalSwap(CastToBase(&other->task_));
}

::google::protobuf::Metadata TaskList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GameList::InitAsDefaultInstance() {
}
class GameList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameList::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameList::GameList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.GameList)
}
GameList::GameList(const GameList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:go.GameList)
}

void GameList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GameList_login_2eproto.base);
}

GameList::~GameList() {
  // @@protoc_insertion_point(destructor:go.GameList)
  SharedDtor();
}

void GameList::SharedDtor() {
}

void GameList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameList& GameList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GameList_login_2eproto.base);
  return *internal_default_instance();
}


void GameList::Clear() {
// @@protoc_insertion_point(message_clear_start:go.GameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GameList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GameList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .go.GameItem Items = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::go::GameItem::_InternalParse;
          object = msg->add_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GameList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.GameList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .go.GameItem Items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.GameList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.GameList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GameList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.GameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .go.GameItem Items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.GameList)
}

::google::protobuf::uint8* GameList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.GameList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .go.GameItem Items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.GameList)
  return target;
}

size_t GameList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.GameList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .go.GameItem Items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.GameList)
  GOOGLE_DCHECK_NE(&from, this);
  const GameList* source =
      ::google::protobuf::DynamicCastToGenerated<GameList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.GameList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.GameList)
    MergeFrom(*source);
  }
}

void GameList::MergeFrom(const GameList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.GameList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void GameList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.GameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameList::CopyFrom(const GameList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.GameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameList::IsInitialized() const {
  return true;
}

void GameList::Swap(GameList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameList::InternalSwap(GameList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
}

::google::protobuf::Metadata GameList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
class UserInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kNameFieldNumber;
const int UserInfo::kAccountsFieldNumber;
const int UserInfo::kPasswordFieldNumber;
const int UserInfo::kFaceIDFieldNumber;
const int UserInfo::kGenderFieldNumber;
const int UserInfo::kAgeFieldNumber;
const int UserInfo::kLevelFieldNumber;
const int UserInfo::kMoneyFieldNumber;
const int UserInfo::kPassPortIDFieldNumber;
const int UserInfo::kCompellationFieldNumber;
const int UserInfo::kAgentIDFieldNumber;
const int UserInfo::kSpreaderGameIDFieldNumber;
const int UserInfo::kClientAddrFieldNumber;
const int UserInfo::kMachineCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  accounts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.accounts().size() > 0) {
    accounts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accounts_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  passportid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.passportid().size() > 0) {
    passportid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passportid_);
  }
  compellation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compellation().size() > 0) {
    compellation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compellation_);
  }
  machinecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.machinecode().size() > 0) {
    machinecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machinecode_);
  }
  ::memcpy(&faceid_, &from.faceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clientaddr_) -
    reinterpret_cast<char*>(&faceid_)) + sizeof(clientaddr_));
  // @@protoc_insertion_point(copy_constructor:go.UserInfo)
}

void UserInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserInfo_login_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accounts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passportid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compellation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&faceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientaddr_) -
      reinterpret_cast<char*>(&faceid_)) + sizeof(clientaddr_));
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:go.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accounts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passportid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compellation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserInfo& UserInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserInfo_login_2eproto.base);
  return *internal_default_instance();
}


void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:go.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accounts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passportid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compellation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machinecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&faceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clientaddr_) -
      reinterpret_cast<char*>(&faceid_)) + sizeof(clientaddr_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.UserInfo.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Accounts = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.UserInfo.Accounts");
        object = msg->mutable_accounts();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Password = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.UserInfo.Password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 FaceID = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_faceid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 Gender = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_gender(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 Age = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_age(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 Level = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 Money = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_money(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string PassPortID = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.UserInfo.PassPortID");
        object = msg->mutable_passportid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Compellation = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.UserInfo.Compellation");
        object = msg->mutable_compellation();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 AgentID = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_agentid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 SpreaderGameID = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_spreadergameid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 ClientAddr = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_clientaddr(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string MachineCode = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.UserInfo.MachineCode");
        object = msg->mutable_machinecode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.UserInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.UserInfo.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Accounts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accounts()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accounts().data(), static_cast<int>(this->accounts().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.UserInfo.Accounts"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.UserInfo.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 FaceID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &faceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Gender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Age = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Money = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PassPortID = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passportid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passportid().data(), static_cast<int>(this->passportid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.UserInfo.PassPortID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Compellation = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compellation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compellation().data(), static_cast<int>(this->compellation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.UserInfo.Compellation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AgentID = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &agentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SpreaderGameID = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spreadergameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ClientAddr = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clientaddr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MachineCode = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machinecode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->machinecode().data(), static_cast<int>(this->machinecode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.UserInfo.MachineCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.UserInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Accounts = 2;
  if (this->accounts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accounts().data(), static_cast<int>(this->accounts().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Accounts");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accounts(), output);
  }

  // string Password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // uint32 FaceID = 4;
  if (this->faceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->faceid(), output);
  }

  // uint32 Gender = 5;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gender(), output);
  }

  // uint32 Age = 6;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->age(), output);
  }

  // uint32 Level = 7;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->level(), output);
  }

  // int64 Money = 8;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->money(), output);
  }

  // string PassPortID = 9;
  if (this->passportid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passportid().data(), static_cast<int>(this->passportid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.PassPortID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->passportid(), output);
  }

  // string Compellation = 10;
  if (this->compellation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compellation().data(), static_cast<int>(this->compellation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Compellation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->compellation(), output);
  }

  // uint32 AgentID = 11;
  if (this->agentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->agentid(), output);
  }

  // uint32 SpreaderGameID = 12;
  if (this->spreadergameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->spreadergameid(), output);
  }

  // uint32 ClientAddr = 13;
  if (this->clientaddr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->clientaddr(), output);
  }

  // string MachineCode = 14;
  if (this->machinecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machinecode().data(), static_cast<int>(this->machinecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.MachineCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->machinecode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Accounts = 2;
  if (this->accounts().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accounts().data(), static_cast<int>(this->accounts().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Accounts");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accounts(), target);
  }

  // string Password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // uint32 FaceID = 4;
  if (this->faceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->faceid(), target);
  }

  // uint32 Gender = 5;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gender(), target);
  }

  // uint32 Age = 6;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->age(), target);
  }

  // uint32 Level = 7;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->level(), target);
  }

  // int64 Money = 8;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->money(), target);
  }

  // string PassPortID = 9;
  if (this->passportid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passportid().data(), static_cast<int>(this->passportid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.PassPortID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->passportid(), target);
  }

  // string Compellation = 10;
  if (this->compellation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compellation().data(), static_cast<int>(this->compellation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.Compellation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->compellation(), target);
  }

  // uint32 AgentID = 11;
  if (this->agentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->agentid(), target);
  }

  // uint32 SpreaderGameID = 12;
  if (this->spreadergameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->spreadergameid(), target);
  }

  // uint32 ClientAddr = 13;
  if (this->clientaddr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->clientaddr(), target);
  }

  // string MachineCode = 14;
  if (this->machinecode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->machinecode().data(), static_cast<int>(this->machinecode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.UserInfo.MachineCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->machinecode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.UserInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Accounts = 2;
  if (this->accounts().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accounts());
  }

  // string Password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string PassPortID = 9;
  if (this->passportid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passportid());
  }

  // string Compellation = 10;
  if (this->compellation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compellation());
  }

  // string MachineCode = 14;
  if (this->machinecode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->machinecode());
  }

  // uint32 FaceID = 4;
  if (this->faceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->faceid());
  }

  // uint32 Gender = 5;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  // uint32 Age = 6;
  if (this->age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->age());
  }

  // uint32 Level = 7;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // int64 Money = 8;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->money());
  }

  // uint32 AgentID = 11;
  if (this->agentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->agentid());
  }

  // uint32 SpreaderGameID = 12;
  if (this->spreadergameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spreadergameid());
  }

  // uint32 ClientAddr = 13;
  if (this->clientaddr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->clientaddr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::DynamicCastToGenerated<UserInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accounts().size() > 0) {

    accounts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accounts_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.passportid().size() > 0) {

    passportid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passportid_);
  }
  if (from.compellation().size() > 0) {

    compellation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compellation_);
  }
  if (from.machinecode().size() > 0) {

    machinecode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machinecode_);
  }
  if (from.faceid() != 0) {
    set_faceid(from.faceid());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.agentid() != 0) {
    set_agentid(from.agentid());
  }
  if (from.spreadergameid() != 0) {
    set_spreadergameid(from.spreadergameid());
  }
  if (from.clientaddr() != 0) {
    set_clientaddr(from.clientaddr());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  accounts_.Swap(&other->accounts_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passportid_.Swap(&other->passportid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  compellation_.Swap(&other->compellation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machinecode_.Swap(&other->machinecode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(faceid_, other->faceid_);
  swap(gender_, other->gender_);
  swap(age_, other->age_);
  swap(level_, other->level_);
  swap(money_, other->money_);
  swap(agentid_, other->agentid_);
  swap(spreadergameid_, other->spreadergameid_);
  swap(clientaddr_, other->clientaddr_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RoomInfo::InitAsDefaultInstance() {
  ::go::_RoomInfo_default_instance_._instance.get_mutable()->games_ = const_cast< ::go::GameList*>(
      ::go::GameList::internal_default_instance());
}
class RoomInfo::HasBitSetters {
 public:
  static const ::go::GameList& games(const RoomInfo* msg);
};

const ::go::GameList&
RoomInfo::HasBitSetters::games(const RoomInfo* msg) {
  return *msg->games_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfo::kRoomNumFieldNumber;
const int RoomInfo::kRoomKeyFieldNumber;
const int RoomInfo::kRoomNameFieldNumber;
const int RoomInfo::kGamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfo::RoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.RoomInfo)
}
RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomkey().size() > 0) {
    roomkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomkey_);
  }
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomname().size() > 0) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_games()) {
    games_ = new ::go::GameList(*from.games_);
  } else {
    games_ = nullptr;
  }
  roomnum_ = from.roomnum_;
  // @@protoc_insertion_point(copy_constructor:go.RoomInfo)
}

void RoomInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RoomInfo_login_2eproto.base);
  roomkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&games_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomnum_) -
      reinterpret_cast<char*>(&games_)) + sizeof(roomnum_));
}

RoomInfo::~RoomInfo() {
  // @@protoc_insertion_point(destructor:go.RoomInfo)
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  roomkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete games_;
}

void RoomInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RoomInfo& RoomInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RoomInfo_login_2eproto.base);
  return *internal_default_instance();
}


void RoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:go.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && games_ != nullptr) {
    delete games_;
  }
  games_ = nullptr;
  roomnum_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RoomInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RoomInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 RoomNum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_roomnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string RoomKey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.RoomInfo.RoomKey");
        object = msg->mutable_roomkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string RoomName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.RoomInfo.RoomName");
        object = msg->mutable_roomname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .go.GameList Games = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::go::GameList::_InternalParse;
        object = msg->mutable_games();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.RoomInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RoomNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoomKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomkey().data(), static_cast<int>(this->roomkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.RoomInfo.RoomKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoomName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.RoomInfo.RoomName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.GameList Games = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_games()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.RoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.RoomInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RoomNum = 1;
  if (this->roomnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomnum(), output);
  }

  // string RoomKey = 2;
  if (this->roomkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomkey().data(), static_cast<int>(this->roomkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.RoomInfo.RoomKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomkey(), output);
  }

  // string RoomName = 3;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.RoomInfo.RoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roomname(), output);
  }

  // .go.GameList Games = 4;
  if (this->has_games()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::games(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.RoomInfo)
}

::google::protobuf::uint8* RoomInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RoomNum = 1;
  if (this->roomnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomnum(), target);
  }

  // string RoomKey = 2;
  if (this->roomkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomkey().data(), static_cast<int>(this->roomkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.RoomInfo.RoomKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomkey(), target);
  }

  // string RoomName = 3;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.RoomInfo.RoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomname(), target);
  }

  // .go.GameList Games = 4;
  if (this->has_games()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::games(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.RoomInfo)
  return target;
}

size_t RoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.RoomInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string RoomKey = 2;
  if (this->roomkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomkey());
  }

  // string RoomName = 3;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // .go.GameList Games = 4;
  if (this->has_games()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *games_);
  }

  // uint32 RoomNum = 1;
  if (this->roomnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfo* source =
      ::google::protobuf::DynamicCastToGenerated<RoomInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.RoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.RoomInfo)
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomkey().size() > 0) {

    roomkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomkey_);
  }
  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_games()) {
    mutable_games()->::go::GameList::MergeFrom(from.games());
  }
  if (from.roomnum() != 0) {
    set_roomnum(from.roomnum());
  }
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfo::InternalSwap(RoomInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  roomkey_.Swap(&other->roomkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  roomname_.Swap(&other->roomname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(games_, other->games_);
  swap(roomnum_, other->roomnum_);
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GameBaseInfo::InitAsDefaultInstance() {
}
class GameBaseInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameBaseInfo::kTypeFieldNumber;
const int GameBaseInfo::kKindIDFieldNumber;
const int GameBaseInfo::kLevelFieldNumber;
const int GameBaseInfo::kNameFieldNumber;
const int GameBaseInfo::kEnterScoreFieldNumber;
const int GameBaseInfo::kLessScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameBaseInfo::GameBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.GameBaseInfo)
}
GameBaseInfo::GameBaseInfo(const GameBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&lessscore_) -
    reinterpret_cast<char*>(&type_)) + sizeof(lessscore_));
  // @@protoc_insertion_point(copy_constructor:go.GameBaseInfo)
}

void GameBaseInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GameBaseInfo_login_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lessscore_) -
      reinterpret_cast<char*>(&type_)) + sizeof(lessscore_));
}

GameBaseInfo::~GameBaseInfo() {
  // @@protoc_insertion_point(destructor:go.GameBaseInfo)
  SharedDtor();
}

void GameBaseInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameBaseInfo& GameBaseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GameBaseInfo_login_2eproto.base);
  return *internal_default_instance();
}


void GameBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:go.GameBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lessscore_) -
      reinterpret_cast<char*>(&type_)) + sizeof(lessscore_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GameBaseInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GameBaseInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 Type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 KindID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_kindid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 Level = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string Name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.GameBaseInfo.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 EnterScore = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_enterscore(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 LessScore = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_lessscore(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GameBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.GameBaseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 KindID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kindid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.GameBaseInfo.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EnterScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enterscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LessScore = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lessscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.GameBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.GameBaseInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GameBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.GameBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint32 KindID = 2;
  if (this->kindid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->kindid(), output);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.GameBaseInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // uint32 EnterScore = 5;
  if (this->enterscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->enterscore(), output);
  }

  // uint32 LessScore = 6;
  if (this->lessscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->lessscore(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.GameBaseInfo)
}

::google::protobuf::uint8* GameBaseInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.GameBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint32 KindID = 2;
  if (this->kindid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->kindid(), target);
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.GameBaseInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // uint32 EnterScore = 5;
  if (this->enterscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->enterscore(), target);
  }

  // uint32 LessScore = 6;
  if (this->lessscore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->lessscore(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.GameBaseInfo)
  return target;
}

size_t GameBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.GameBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 KindID = 2;
  if (this->kindid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kindid());
  }

  // uint32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 EnterScore = 5;
  if (this->enterscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enterscore());
  }

  // uint32 LessScore = 6;
  if (this->lessscore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lessscore());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.GameBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GameBaseInfo* source =
      ::google::protobuf::DynamicCastToGenerated<GameBaseInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.GameBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.GameBaseInfo)
    MergeFrom(*source);
  }
}

void GameBaseInfo::MergeFrom(const GameBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.GameBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.kindid() != 0) {
    set_kindid(from.kindid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.enterscore() != 0) {
    set_enterscore(from.enterscore());
  }
  if (from.lessscore() != 0) {
    set_lessscore(from.lessscore());
  }
}

void GameBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.GameBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameBaseInfo::CopyFrom(const GameBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.GameBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameBaseInfo::IsInitialized() const {
  return true;
}

void GameBaseInfo::Swap(GameBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameBaseInfo::InternalSwap(GameBaseInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(kindid_, other->kindid_);
  swap(level_, other->level_);
  swap(enterscore_, other->enterscore_);
  swap(lessscore_, other->lessscore_);
}

::google::protobuf::Metadata GameBaseInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GameItem::InitAsDefaultInstance() {
  ::go::_GameItem_default_instance_._instance.get_mutable()->info_ = const_cast< ::go::GameBaseInfo*>(
      ::go::GameBaseInfo::internal_default_instance());
}
class GameItem::HasBitSetters {
 public:
  static const ::go::GameBaseInfo& info(const GameItem* msg);
};

const ::go::GameBaseInfo&
GameItem::HasBitSetters::info(const GameItem* msg) {
  return *msg->info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameItem::kIDFieldNumber;
const int GameItem::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameItem::GameItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.GameItem)
}
GameItem::GameItem(const GameItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::go::GameBaseInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:go.GameItem)
}

void GameItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GameItem_login_2eproto.base);
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&info_)) + sizeof(id_));
}

GameItem::~GameItem() {
  // @@protoc_insertion_point(destructor:go.GameItem)
  SharedDtor();
}

void GameItem::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void GameItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameItem& GameItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GameItem_login_2eproto.base);
  return *internal_default_instance();
}


void GameItem::Clear() {
// @@protoc_insertion_point(message_clear_start:go.GameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GameItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GameItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 ID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .go.GameBaseInfo Info = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::go::GameBaseInfo::_InternalParse;
        object = msg->mutable_info();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GameItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.GameItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.GameBaseInfo Info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.GameItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.GameItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GameItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.GameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .go.GameBaseInfo Info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.GameItem)
}

::google::protobuf::uint8* GameItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.GameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ID = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .go.GameBaseInfo Info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::info(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.GameItem)
  return target;
}

size_t GameItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.GameItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .go.GameBaseInfo Info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // uint32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.GameItem)
  GOOGLE_DCHECK_NE(&from, this);
  const GameItem* source =
      ::google::protobuf::DynamicCastToGenerated<GameItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.GameItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.GameItem)
    MergeFrom(*source);
  }
}

void GameItem::MergeFrom(const GameItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.GameItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::go::GameBaseInfo::MergeFrom(from.info());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void GameItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.GameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameItem::CopyFrom(const GameItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.GameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameItem::IsInitialized() const {
  return true;
}

void GameItem::Swap(GameItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameItem::InternalSwap(GameItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(info_, other->info_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata GameItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MasterInfo::InitAsDefaultInstance() {
  ::go::_MasterInfo_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::go::UserInfo*>(
      ::go::UserInfo::internal_default_instance());
  ::go::_MasterInfo_default_instance_._instance.get_mutable()->tasks_ = const_cast< ::go::TaskList*>(
      ::go::TaskList::internal_default_instance());
}
class MasterInfo::HasBitSetters {
 public:
  static const ::go::UserInfo& userinfo(const MasterInfo* msg);
  static const ::go::TaskList& tasks(const MasterInfo* msg);
};

const ::go::UserInfo&
MasterInfo::HasBitSetters::userinfo(const MasterInfo* msg) {
  return *msg->userinfo_;
}
const ::go::TaskList&
MasterInfo::HasBitSetters::tasks(const MasterInfo* msg) {
  return *msg->tasks_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterInfo::kUserInfoFieldNumber;
const int MasterInfo::kRoomsInfoFieldNumber;
const int MasterInfo::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterInfo::MasterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.MasterInfo)
}
MasterInfo::MasterInfo(const MasterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      roomsinfo_(from.roomsinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    userinfo_ = new ::go::UserInfo(*from.userinfo_);
  } else {
    userinfo_ = nullptr;
  }
  if (from.has_tasks()) {
    tasks_ = new ::go::TaskList(*from.tasks_);
  } else {
    tasks_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:go.MasterInfo)
}

void MasterInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MasterInfo_login_2eproto.base);
  ::memset(&userinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tasks_) -
      reinterpret_cast<char*>(&userinfo_)) + sizeof(tasks_));
}

MasterInfo::~MasterInfo() {
  // @@protoc_insertion_point(destructor:go.MasterInfo)
  SharedDtor();
}

void MasterInfo::SharedDtor() {
  if (this != internal_default_instance()) delete userinfo_;
  if (this != internal_default_instance()) delete tasks_;
}

void MasterInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MasterInfo& MasterInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MasterInfo_login_2eproto.base);
  return *internal_default_instance();
}


void MasterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:go.MasterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomsinfo_.Clear();
  if (GetArenaNoVirtual() == nullptr && userinfo_ != nullptr) {
    delete userinfo_;
  }
  userinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && tasks_ != nullptr) {
    delete tasks_;
  }
  tasks_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MasterInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MasterInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .go.UserInfo UserInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::go::UserInfo::_InternalParse;
        object = msg->mutable_userinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .go.RoomInfo RoomsInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::go::RoomInfo::_InternalParse;
          object = msg->add_roomsinfo();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // .go.TaskList Tasks = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::go::TaskList::_InternalParse;
        object = msg->mutable_tasks();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MasterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.MasterInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .go.UserInfo UserInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .go.RoomInfo RoomsInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roomsinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .go.TaskList Tasks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.MasterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.MasterInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MasterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.MasterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.UserInfo UserInfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::userinfo(this), output);
  }

  // repeated .go.RoomInfo RoomsInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomsinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roomsinfo(static_cast<int>(i)),
      output);
  }

  // .go.TaskList Tasks = 3;
  if (this->has_tasks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::tasks(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.MasterInfo)
}

::google::protobuf::uint8* MasterInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.MasterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .go.UserInfo UserInfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::userinfo(this), target);
  }

  // repeated .go.RoomInfo RoomsInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roomsinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roomsinfo(static_cast<int>(i)), target);
  }

  // .go.TaskList Tasks = 3;
  if (this->has_tasks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::tasks(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.MasterInfo)
  return target;
}

size_t MasterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.MasterInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .go.RoomInfo RoomsInfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roomsinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roomsinfo(static_cast<int>(i)));
    }
  }

  // .go.UserInfo UserInfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *userinfo_);
  }

  // .go.TaskList Tasks = 3;
  if (this->has_tasks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tasks_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.MasterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MasterInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.MasterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.MasterInfo)
    MergeFrom(*source);
  }
}

void MasterInfo::MergeFrom(const MasterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.MasterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roomsinfo_.MergeFrom(from.roomsinfo_);
  if (from.has_userinfo()) {
    mutable_userinfo()->::go::UserInfo::MergeFrom(from.userinfo());
  }
  if (from.has_tasks()) {
    mutable_tasks()->::go::TaskList::MergeFrom(from.tasks());
  }
}

void MasterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.MasterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterInfo::CopyFrom(const MasterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.MasterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterInfo::IsInitialized() const {
  return true;
}

void MasterInfo::Swap(MasterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterInfo::InternalSwap(MasterInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&roomsinfo_)->InternalSwap(CastToBase(&other->roomsinfo_));
  swap(userinfo_, other->userinfo_);
  swap(tasks_, other->tasks_);
}

::google::protobuf::Metadata MasterInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqEnterRoom::InitAsDefaultInstance() {
}
class ReqEnterRoom::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqEnterRoom::kRoomNumFieldNumber;
const int ReqEnterRoom::kRoomKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqEnterRoom::ReqEnterRoom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.ReqEnterRoom)
}
ReqEnterRoom::ReqEnterRoom(const ReqEnterRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomkey().size() > 0) {
    roomkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomkey_);
  }
  roomnum_ = from.roomnum_;
  // @@protoc_insertion_point(copy_constructor:go.ReqEnterRoom)
}

void ReqEnterRoom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReqEnterRoom_login_2eproto.base);
  roomkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomnum_ = 0u;
}

ReqEnterRoom::~ReqEnterRoom() {
  // @@protoc_insertion_point(destructor:go.ReqEnterRoom)
  SharedDtor();
}

void ReqEnterRoom::SharedDtor() {
  roomkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqEnterRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqEnterRoom& ReqEnterRoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqEnterRoom_login_2eproto.base);
  return *internal_default_instance();
}


void ReqEnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:go.ReqEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomnum_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqEnterRoom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqEnterRoom*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 RoomNum = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_roomnum(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string RoomKey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("go.ReqEnterRoom.RoomKey");
        object = msg->mutable_roomkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqEnterRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.ReqEnterRoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RoomNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoomKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomkey().data(), static_cast<int>(this->roomkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "go.ReqEnterRoom.RoomKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.ReqEnterRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.ReqEnterRoom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqEnterRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.ReqEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RoomNum = 1;
  if (this->roomnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomnum(), output);
  }

  // string RoomKey = 2;
  if (this->roomkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomkey().data(), static_cast<int>(this->roomkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.ReqEnterRoom.RoomKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.ReqEnterRoom)
}

::google::protobuf::uint8* ReqEnterRoom::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.ReqEnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RoomNum = 1;
  if (this->roomnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomnum(), target);
  }

  // string RoomKey = 2;
  if (this->roomkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomkey().data(), static_cast<int>(this->roomkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "go.ReqEnterRoom.RoomKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.ReqEnterRoom)
  return target;
}

size_t ReqEnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.ReqEnterRoom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string RoomKey = 2;
  if (this->roomkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomkey());
  }

  // uint32 RoomNum = 1;
  if (this->roomnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqEnterRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.ReqEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqEnterRoom* source =
      ::google::protobuf::DynamicCastToGenerated<ReqEnterRoom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.ReqEnterRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.ReqEnterRoom)
    MergeFrom(*source);
  }
}

void ReqEnterRoom::MergeFrom(const ReqEnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.ReqEnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomkey().size() > 0) {

    roomkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomkey_);
  }
  if (from.roomnum() != 0) {
    set_roomnum(from.roomnum());
  }
}

void ReqEnterRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.ReqEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqEnterRoom::CopyFrom(const ReqEnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.ReqEnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqEnterRoom::IsInitialized() const {
  return true;
}

void ReqEnterRoom::Swap(ReqEnterRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqEnterRoom::InternalSwap(ReqEnterRoom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  roomkey_.Swap(&other->roomkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomnum_, other->roomnum_);
}

::google::protobuf::Metadata ReqEnterRoom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqEnterGame::InitAsDefaultInstance() {
}
class ReqEnterGame::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqEnterGame::kGameIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqEnterGame::ReqEnterGame()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.ReqEnterGame)
}
ReqEnterGame::ReqEnterGame(const ReqEnterGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_ = from.gameid_;
  // @@protoc_insertion_point(copy_constructor:go.ReqEnterGame)
}

void ReqEnterGame::SharedCtor() {
  gameid_ = 0u;
}

ReqEnterGame::~ReqEnterGame() {
  // @@protoc_insertion_point(destructor:go.ReqEnterGame)
  SharedDtor();
}

void ReqEnterGame::SharedDtor() {
}

void ReqEnterGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqEnterGame& ReqEnterGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqEnterGame_login_2eproto.base);
  return *internal_default_instance();
}


void ReqEnterGame::Clear() {
// @@protoc_insertion_point(message_clear_start:go.ReqEnterGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gameid_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqEnterGame::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqEnterGame*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 GameID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_gameid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqEnterGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.ReqEnterGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 GameID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.ReqEnterGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.ReqEnterGame)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqEnterGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.ReqEnterGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 GameID = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.ReqEnterGame)
}

::google::protobuf::uint8* ReqEnterGame::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.ReqEnterGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 GameID = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.ReqEnterGame)
  return target;
}

size_t ReqEnterGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.ReqEnterGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 GameID = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqEnterGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.ReqEnterGame)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqEnterGame* source =
      ::google::protobuf::DynamicCastToGenerated<ReqEnterGame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.ReqEnterGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.ReqEnterGame)
    MergeFrom(*source);
  }
}

void ReqEnterGame::MergeFrom(const ReqEnterGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.ReqEnterGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
}

void ReqEnterGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.ReqEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqEnterGame::CopyFrom(const ReqEnterGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.ReqEnterGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqEnterGame::IsInitialized() const {
  return true;
}

void ReqEnterGame::Swap(ReqEnterGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqEnterGame::InternalSwap(ReqEnterGame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(gameid_, other->gameid_);
}

::google::protobuf::Metadata ReqEnterGame::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReqExitGame::InitAsDefaultInstance() {
}
class ReqExitGame::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqExitGame::kGameIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqExitGame::ReqExitGame()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:go.ReqExitGame)
}
ReqExitGame::ReqExitGame(const ReqExitGame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_ = from.gameid_;
  // @@protoc_insertion_point(copy_constructor:go.ReqExitGame)
}

void ReqExitGame::SharedCtor() {
  gameid_ = 0u;
}

ReqExitGame::~ReqExitGame() {
  // @@protoc_insertion_point(destructor:go.ReqExitGame)
  SharedDtor();
}

void ReqExitGame::SharedDtor() {
}

void ReqExitGame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqExitGame& ReqExitGame::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReqExitGame_login_2eproto.base);
  return *internal_default_instance();
}


void ReqExitGame::Clear() {
// @@protoc_insertion_point(message_clear_start:go.ReqExitGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gameid_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqExitGame::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReqExitGame*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 GameID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_gameid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqExitGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:go.ReqExitGame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 GameID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:go.ReqExitGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:go.ReqExitGame)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqExitGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:go.ReqExitGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 GameID = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:go.ReqExitGame)
}

::google::protobuf::uint8* ReqExitGame::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:go.ReqExitGame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 GameID = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:go.ReqExitGame)
  return target;
}

size_t ReqExitGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:go.ReqExitGame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 GameID = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqExitGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:go.ReqExitGame)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqExitGame* source =
      ::google::protobuf::DynamicCastToGenerated<ReqExitGame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:go.ReqExitGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:go.ReqExitGame)
    MergeFrom(*source);
  }
}

void ReqExitGame::MergeFrom(const ReqExitGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:go.ReqExitGame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
}

void ReqExitGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:go.ReqExitGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqExitGame::CopyFrom(const ReqExitGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:go.ReqExitGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqExitGame::IsInitialized() const {
  return true;
}

void ReqExitGame::Swap(ReqExitGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqExitGame::InternalSwap(ReqExitGame* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(gameid_, other->gameid_);
}

::google::protobuf::Metadata ReqExitGame::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_login_2eproto);
  return ::file_level_metadata_login_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace go
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::go::Register* Arena::CreateMaybeMessage< ::go::Register >(Arena* arena) {
  return Arena::CreateInternal< ::go::Register >(arena);
}
template<> PROTOBUF_NOINLINE ::go::RegisterResult* Arena::CreateMaybeMessage< ::go::RegisterResult >(Arena* arena) {
  return Arena::CreateInternal< ::go::RegisterResult >(arena);
}
template<> PROTOBUF_NOINLINE ::go::Login* Arena::CreateMaybeMessage< ::go::Login >(Arena* arena) {
  return Arena::CreateInternal< ::go::Login >(arena);
}
template<> PROTOBUF_NOINLINE ::go::ResResult* Arena::CreateMaybeMessage< ::go::ResResult >(Arena* arena) {
  return Arena::CreateInternal< ::go::ResResult >(arena);
}
template<> PROTOBUF_NOINLINE ::go::TaskItem* Arena::CreateMaybeMessage< ::go::TaskItem >(Arena* arena) {
  return Arena::CreateInternal< ::go::TaskItem >(arena);
}
template<> PROTOBUF_NOINLINE ::go::TaskList* Arena::CreateMaybeMessage< ::go::TaskList >(Arena* arena) {
  return Arena::CreateInternal< ::go::TaskList >(arena);
}
template<> PROTOBUF_NOINLINE ::go::GameList* Arena::CreateMaybeMessage< ::go::GameList >(Arena* arena) {
  return Arena::CreateInternal< ::go::GameList >(arena);
}
template<> PROTOBUF_NOINLINE ::go::UserInfo* Arena::CreateMaybeMessage< ::go::UserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::go::UserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::go::RoomInfo* Arena::CreateMaybeMessage< ::go::RoomInfo >(Arena* arena) {
  return Arena::CreateInternal< ::go::RoomInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::go::GameBaseInfo* Arena::CreateMaybeMessage< ::go::GameBaseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::go::GameBaseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::go::GameItem* Arena::CreateMaybeMessage< ::go::GameItem >(Arena* arena) {
  return Arena::CreateInternal< ::go::GameItem >(arena);
}
template<> PROTOBUF_NOINLINE ::go::MasterInfo* Arena::CreateMaybeMessage< ::go::MasterInfo >(Arena* arena) {
  return Arena::CreateInternal< ::go::MasterInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::go::ReqEnterRoom* Arena::CreateMaybeMessage< ::go::ReqEnterRoom >(Arena* arena) {
  return Arena::CreateInternal< ::go::ReqEnterRoom >(arena);
}
template<> PROTOBUF_NOINLINE ::go::ReqEnterGame* Arena::CreateMaybeMessage< ::go::ReqEnterGame >(Arena* arena) {
  return Arena::CreateInternal< ::go::ReqEnterGame >(arena);
}
template<> PROTOBUF_NOINLINE ::go::ReqExitGame* Arena::CreateMaybeMessage< ::go::ReqExitGame >(Arena* arena) {
  return Arena::CreateInternal< ::go::ReqExitGame >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
