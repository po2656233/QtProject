// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/compiler/profile.proto

#include <google/protobuf/compiler/profile.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fcompiler_2fprofile_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fcompiler_2fprofile_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto;
namespace google {
namespace protobuf {
namespace compiler {
class FieldAccessInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldAccessInfo> _instance;
} _FieldAccessInfo_default_instance_;
class MessageAccessInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageAccessInfo> _instance;
} _MessageAccessInfo_default_instance_;
class AccessInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccessInfo> _instance;
} _AccessInfo_default_instance_;
}  // namespace compiler
}  // namespace protobuf
}  // namespace google
static void InitDefaultsFieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::compiler::_FieldAccessInfo_default_instance_;
    new (ptr) ::google::protobuf::compiler::FieldAccessInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::compiler::FieldAccessInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto}, {}};

static void InitDefaultsMessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::compiler::_MessageAccessInfo_default_instance_;
    new (ptr) ::google::protobuf::compiler::MessageAccessInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::compiler::MessageAccessInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto}, {
      &scc_info_FieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base,}};

static void InitDefaultsAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::protobuf::compiler::_AccessInfo_default_instance_;
    new (ptr) ::google::protobuf::compiler::AccessInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::protobuf::compiler::AccessInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto}, {
      &scc_info_MessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base,}};

void InitDefaults_google_2fprotobuf_2fcompiler_2fprofile_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_FieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_google_2fprotobuf_2fcompiler_2fprofile_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_google_2fprotobuf_2fcompiler_2fprofile_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::FieldAccessInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::FieldAccessInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::FieldAccessInfo, name_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::FieldAccessInfo, getters_count_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::FieldAccessInfo, setters_count_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::FieldAccessInfo, configs_count_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::MessageAccessInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::MessageAccessInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::MessageAccessInfo, name_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::MessageAccessInfo, count_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::MessageAccessInfo, field_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::AccessInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::AccessInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::protobuf::compiler::AccessInfo, message_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::google::protobuf::compiler::FieldAccessInfo)},
  { 13, 21, sizeof(::google::protobuf::compiler::MessageAccessInfo)},
  { 24, 30, sizeof(::google::protobuf::compiler::AccessInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::compiler::_FieldAccessInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::compiler::_MessageAccessInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::protobuf::compiler::_AccessInfo_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto = {
  {}, AddDescriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto, "google/protobuf/compiler/profile.proto", schemas,
  file_default_instances, TableStruct_google_2fprotobuf_2fcompiler_2fprofile_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2fcompiler_2fprofile_2eproto, 3, file_level_enum_descriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto, file_level_service_descriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto,
};

const char descriptor_table_protodef_google_2fprotobuf_2fcompiler_2fprofile_2eproto[] =
  "\n&google/protobuf/compiler/profile.proto"
  "\022\030google.protobuf.compiler\"d\n\017FieldAcces"
  "sInfo\022\014\n\004name\030\001 \001(\t\022\025\n\rgetters_count\030\002 \001"
  "(\004\022\025\n\rsetters_count\030\003 \001(\004\022\025\n\rconfigs_cou"
  "nt\030\004 \001(\004\"j\n\021MessageAccessInfo\022\014\n\004name\030\001 "
  "\001(\t\022\r\n\005count\030\002 \001(\004\0228\n\005field\030\003 \003(\0132).goog"
  "le.protobuf.compiler.FieldAccessInfo\"J\n\n"
  "AccessInfo\022<\n\007message\030\001 \003(\0132+.google.pro"
  "tobuf.compiler.MessageAccessInfo"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto = {
  false, InitDefaults_google_2fprotobuf_2fcompiler_2fprofile_2eproto, 
  descriptor_table_protodef_google_2fprotobuf_2fcompiler_2fprofile_2eproto,
  "google/protobuf/compiler/profile.proto", &assign_descriptors_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto, 352,
};

void AddDescriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2fcompiler_2fprofile_2eproto = []() { AddDescriptors_google_2fprotobuf_2fcompiler_2fprofile_2eproto(); return true; }();
namespace google {
namespace protobuf {
namespace compiler {

// ===================================================================

void FieldAccessInfo::InitAsDefaultInstance() {
}
class FieldAccessInfo::HasBitSetters {
 public:
  static void set_has_name(FieldAccessInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_getters_count(FieldAccessInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_setters_count(FieldAccessInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_configs_count(FieldAccessInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldAccessInfo::kNameFieldNumber;
const int FieldAccessInfo::kGettersCountFieldNumber;
const int FieldAccessInfo::kSettersCountFieldNumber;
const int FieldAccessInfo::kConfigsCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldAccessInfo::FieldAccessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.compiler.FieldAccessInfo)
}
FieldAccessInfo::FieldAccessInfo(const FieldAccessInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&getters_count_, &from.getters_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&configs_count_) -
    reinterpret_cast<char*>(&getters_count_)) + sizeof(configs_count_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.compiler.FieldAccessInfo)
}

void FieldAccessInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&getters_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configs_count_) -
      reinterpret_cast<char*>(&getters_count_)) + sizeof(configs_count_));
}

FieldAccessInfo::~FieldAccessInfo() {
  // @@protoc_insertion_point(destructor:google.protobuf.compiler.FieldAccessInfo)
  SharedDtor();
}

void FieldAccessInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldAccessInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FieldAccessInfo& FieldAccessInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FieldAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  return *internal_default_instance();
}


void FieldAccessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.compiler.FieldAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&getters_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&configs_count_) -
        reinterpret_cast<char*>(&getters_count_)) + sizeof(configs_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FieldAccessInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FieldAccessInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.compiler.FieldAccessInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 getters_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_getters_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 setters_count = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_setters_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 configs_count = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_configs_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FieldAccessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.compiler.FieldAccessInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.compiler.FieldAccessInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 getters_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_getters_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &getters_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 setters_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_setters_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &setters_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 configs_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_configs_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &configs_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.compiler.FieldAccessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.compiler.FieldAccessInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FieldAccessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.compiler.FieldAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.FieldAccessInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 getters_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->getters_count(), output);
  }

  // optional uint64 setters_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->setters_count(), output);
  }

  // optional uint64 configs_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->configs_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.compiler.FieldAccessInfo)
}

::google::protobuf::uint8* FieldAccessInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.compiler.FieldAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.FieldAccessInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 getters_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->getters_count(), target);
  }

  // optional uint64 setters_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->setters_count(), target);
  }

  // optional uint64 configs_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->configs_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.compiler.FieldAccessInfo)
  return target;
}

size_t FieldAccessInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.compiler.FieldAccessInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 getters_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->getters_count());
    }

    // optional uint64 setters_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->setters_count());
    }

    // optional uint64 configs_count = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->configs_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldAccessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.compiler.FieldAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldAccessInfo* source =
      ::google::protobuf::DynamicCastToGenerated<FieldAccessInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.compiler.FieldAccessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.compiler.FieldAccessInfo)
    MergeFrom(*source);
  }
}

void FieldAccessInfo::MergeFrom(const FieldAccessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.compiler.FieldAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      getters_count_ = from.getters_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      setters_count_ = from.setters_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      configs_count_ = from.configs_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FieldAccessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.compiler.FieldAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldAccessInfo::CopyFrom(const FieldAccessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.compiler.FieldAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldAccessInfo::IsInitialized() const {
  return true;
}

void FieldAccessInfo::Swap(FieldAccessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldAccessInfo::InternalSwap(FieldAccessInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(getters_count_, other->getters_count_);
  swap(setters_count_, other->setters_count_);
  swap(configs_count_, other->configs_count_);
}

::google::protobuf::Metadata FieldAccessInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2fcompiler_2fprofile_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageAccessInfo::InitAsDefaultInstance() {
}
class MessageAccessInfo::HasBitSetters {
 public:
  static void set_has_name(MessageAccessInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_count(MessageAccessInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageAccessInfo::kNameFieldNumber;
const int MessageAccessInfo::kCountFieldNumber;
const int MessageAccessInfo::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageAccessInfo::MessageAccessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.compiler.MessageAccessInfo)
}
MessageAccessInfo::MessageAccessInfo(const MessageAccessInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      field_(from.field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.compiler.MessageAccessInfo)
}

void MessageAccessInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = PROTOBUF_ULONGLONG(0);
}

MessageAccessInfo::~MessageAccessInfo() {
  // @@protoc_insertion_point(destructor:google.protobuf.compiler.MessageAccessInfo)
  SharedDtor();
}

void MessageAccessInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageAccessInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageAccessInfo& MessageAccessInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageAccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  return *internal_default_instance();
}


void MessageAccessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.compiler.MessageAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  count_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageAccessInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageAccessInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("google.protobuf.compiler.MessageAccessInfo.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::compiler::FieldAccessInfo::_InternalParse;
          object = msg->add_field();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageAccessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.compiler.MessageAccessInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.compiler.MessageAccessInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.compiler.MessageAccessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.compiler.MessageAccessInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageAccessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.compiler.MessageAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.MessageAccessInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->field(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.compiler.MessageAccessInfo)
}

::google::protobuf::uint8* MessageAccessInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.compiler.MessageAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.MessageAccessInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->field(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.compiler.MessageAccessInfo)
  return target;
}

size_t MessageAccessInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.compiler.MessageAccessInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageAccessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.compiler.MessageAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageAccessInfo* source =
      ::google::protobuf::DynamicCastToGenerated<MessageAccessInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.compiler.MessageAccessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.compiler.MessageAccessInfo)
    MergeFrom(*source);
  }
}

void MessageAccessInfo::MergeFrom(const MessageAccessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.compiler.MessageAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_.MergeFrom(from.field_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageAccessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.compiler.MessageAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageAccessInfo::CopyFrom(const MessageAccessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.compiler.MessageAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageAccessInfo::IsInitialized() const {
  return true;
}

void MessageAccessInfo::Swap(MessageAccessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageAccessInfo::InternalSwap(MessageAccessInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&field_)->InternalSwap(CastToBase(&other->field_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
}

::google::protobuf::Metadata MessageAccessInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2fcompiler_2fprofile_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AccessInfo::InitAsDefaultInstance() {
}
class AccessInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessInfo::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessInfo::AccessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.compiler.AccessInfo)
}
AccessInfo::AccessInfo(const AccessInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      message_(from.message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.compiler.AccessInfo)
}

void AccessInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
}

AccessInfo::~AccessInfo() {
  // @@protoc_insertion_point(destructor:google.protobuf.compiler.AccessInfo)
  SharedDtor();
}

void AccessInfo::SharedDtor() {
}

void AccessInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccessInfo& AccessInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AccessInfo_google_2fprotobuf_2fcompiler_2fprofile_2eproto.base);
  return *internal_default_instance();
}


void AccessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.compiler.AccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AccessInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AccessInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::compiler::MessageAccessInfo::_InternalParse;
          object = msg->add_message();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AccessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.compiler.AccessInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.compiler.AccessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.compiler.AccessInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AccessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.compiler.AccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->message(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.compiler.AccessInfo)
}

::google::protobuf::uint8* AccessInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.compiler.AccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->message(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.compiler.AccessInfo)
  return target;
}

size_t AccessInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.compiler.AccessInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.compiler.AccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessInfo* source =
      ::google::protobuf::DynamicCastToGenerated<AccessInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.compiler.AccessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.compiler.AccessInfo)
    MergeFrom(*source);
  }
}

void AccessInfo::MergeFrom(const AccessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.compiler.AccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
}

void AccessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.compiler.AccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessInfo::CopyFrom(const AccessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.compiler.AccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessInfo::IsInitialized() const {
  return true;
}

void AccessInfo::Swap(AccessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessInfo::InternalSwap(AccessInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&message_)->InternalSwap(CastToBase(&other->message_));
}

::google::protobuf::Metadata AccessInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_google_2fprotobuf_2fcompiler_2fprofile_2eproto);
  return ::file_level_metadata_google_2fprotobuf_2fcompiler_2fprofile_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace compiler
}  // namespace protobuf
}  // namespace google
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::google::protobuf::compiler::FieldAccessInfo* Arena::CreateMaybeMessage< ::google::protobuf::compiler::FieldAccessInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::compiler::FieldAccessInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::compiler::MessageAccessInfo* Arena::CreateMaybeMessage< ::google::protobuf::compiler::MessageAccessInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::compiler::MessageAccessInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::protobuf::compiler::AccessInfo* Arena::CreateMaybeMessage< ::google::protobuf::compiler::AccessInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::protobuf::compiler::AccessInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
